{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","Viewer","useRef","useEffect","current","fitToViewer","className","onClick","zoomOnViewerCenter","fitSelection","ref","width","height","onZoom","e","console","log","onPan","event","x","y","originalEvent","fillOpacity","strokeWidth","fill","stroke","cx","cy","r","src","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8JAAe,G,MAAA,IAA0B,kC,cCM1B,SAASA,IACtB,IAAMC,EAASC,iBAAO,MAEtBC,qBAAU,WACRF,EAAOG,QAAQC,gBACd,IAOH,OACE,gCACE,6DACA,uBAEA,wBAAQC,UAAU,MAAMC,QAAS,kBATHN,EAAOG,QAAQI,mBAAmB,MAShE,4BACA,wBAAQF,UAAU,MAAMC,QAAS,kBATTN,EAAOG,QAAQK,aAAa,GAAI,GAAI,IAAK,MASjE,+BACA,wBAAQH,UAAU,MAAMC,QAAS,kBATVN,EAAOG,QAAQC,eAStC,iBACA,uBAEA,cAAC,IAAD,CACEK,IAAKT,EACLU,MAAO,IAAKC,OAAQ,IACpBC,OAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAI,SACzBC,MAAO,SAAAH,GAAC,OAAIC,QAAQC,IAAI,QACxBT,QAAS,SAAAW,GAAK,OAAIH,QAAQC,IAAI,QAASE,EAAMC,EAAGD,EAAME,EAAGF,EAAMG,gBALjE,SAOE,sBAAKV,MAAO,IAAKC,OAAQ,IAAzB,gBACK,oBAAGU,YAAY,KAAKC,YAAY,IAAhC,kBACE,sBAAMJ,EAAE,MAAMC,EAAE,KAAKT,MAAM,MAAMC,OAAO,MAAMY,KAAK,UAAUC,OAAO,YADtE,QAEE,wBAAQC,GAAG,MAAMC,GAAG,QAAQC,EAAE,MAAMJ,KAAK,OAAOC,OAAO,SAFzD,QAGE,wBAAQC,GAAG,MAAMC,GAAG,QAAQC,EAAE,MAAMJ,KAAK,OAAOC,OAAO,SAHzD,QAIE,wBAAQC,GAAG,MAAMC,GAAG,QAAQC,EAAE,MAAMJ,KAAK,OAAOC,OAAO,SAJzD,SAMH,qBAAKI,IAAKC,YC1CpB,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAACzC,EAAD,IAEF0C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ce0ad091.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\n// import './App.css';\nimport React, {useRef, useEffect} from 'react';\nimport {UncontrolledReactSVGPanZoom} from 'react-svg-pan-zoom';\n\n\nexport default function App() {\n  const Viewer = useRef(null);\n\n  useEffect(() => {\n    Viewer.current.fitToViewer();\n  }, []);\n\n  /* Read all the available methods in the documentation */\n  const _zoomOnViewerCenter = () => Viewer.current.zoomOnViewerCenter(1.1)\n  const _fitSelection = () => Viewer.current.fitSelection(40, 40, 200, 200)\n  const _fitToViewer = () => Viewer.current.fitToViewer()\n\n  return (\n    <div>\n      <h1>UncontrolledReactSVGPanZoom</h1>\n      <hr/>\n\n      <button className=\"btn\" onClick={() => _zoomOnViewerCenter()}>Zoom on center</button>\n      <button className=\"btn\" onClick={() => _fitSelection()}>Zoom area 200x200</button>\n      <button className=\"btn\" onClick={() => _fitToViewer()}>Fit</button>\n      <hr/>\n\n      <UncontrolledReactSVGPanZoom\n        ref={Viewer}\n        width={500} height={500}\n        onZoom={e => console.log('zoom')}\n        onPan={e => console.log('pan')}\n        onClick={event => console.log('click', event.x, event.y, event.originalEvent)}\n      >\n        <svg width={617} height={316}>\n          // <g fillOpacity=\".5\" strokeWidth=\"4\">\n          //   <rect x=\"400\" y=\"40\" width=\"100\" height=\"200\" fill=\"#4286f4\" stroke=\"#f4f142\"/>\n          //   <circle cx=\"108\" cy=\"108.5\" r=\"100\" fill=\"#0ff\" stroke=\"#0ff\"/>\n          //   <circle cx=\"180\" cy=\"209.5\" r=\"100\" fill=\"#ff0\" stroke=\"#ff0\"/>\n          //   <circle cx=\"220\" cy=\"109.5\" r=\"100\" fill=\"#f0f\" stroke=\"#f0f\"/>\n          // </g>\n          <img src={logo}  />\n        </svg>\n      </UncontrolledReactSVGPanZoom>\n    </div>\n  )\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           satu peta pikiran untuk semua pemikiran\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://irzalgit.github.io\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Portal Peta Pikiran\n\n\n\n\n\n\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}